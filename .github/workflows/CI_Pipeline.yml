name: CI Pipeline
on:
    workflow_dispatch: 
    # push:
    # pull_request: 
    #   branches: 
    #     - main
    #     - develop

jobs:
    build_unit_tets:
        name: Build Unit Tests
        runs-on: ubuntu-latest
        strategy:
          matrix:
            module:
              - pushbutton
              - switch
        steps:
            - name: checkout
              uses: actions/checkout@v4
      
            - name: Get Ninja
              uses: seanmiddleditch/gha-setup-ninja@master 
      
            - name: Build 
              working-directory: test/${{matrix.module}}
              run: |
                mkdir out
                cmake -Bout -GNinja
                cmake --build out

            - name: Save Build Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: ${{matrix.module}}_unit_tests_app
                path: ./test/${{matrix.module}}/out
                if-no-files-found: warn
                retention-days: 1
                overwrite: true
            
    
    build_STM32G071RB_nucleo_ll_1_key_ui:
        name: Build STM32G071RB Nucleo LL 1 KEY UI
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
              uses: carlosperate/arm-none-eabi-gcc-action@v1
      
            - name: Get Ninja
              uses: seanmiddleditch/gha-setup-ninja@master 
      
            - name: Build 
              working-directory: examples/STM32G071_NUCLEO_LL_1_KEY_UI
              run: |
                mkdir out
                cmake -Bout -GNinja -DCMAKE_BUILD_TYPE=Debug
                cmake --build out

    build_STM32G071RB_nucleo_ll_2state_switch:
        name: Build STM32G071RB Nucleo LL 2STATE SWITCH
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
              uses: carlosperate/arm-none-eabi-gcc-action@v1
        
            - name: Get Ninja
              uses: seanmiddleditch/gha-setup-ninja@master 
        
            - name: Build 
              working-directory: examples/STM32G071_NUCLEO_LL_2_STATE_SWITCH
              run: |
                mkdir out
                cmake -Bout -GNinja -DCMAKE_BUILD_TYPE=Debug
                cmake --build out

    run_clang-format_check:
        name: Run Clang-format Check
        strategy:
          matrix:
            path:
              - check: 'src/pushbutton'
                exclude: ''
              - check: 'src/switch'
                exclude: ''
              - check: 'test'
                exclude: '(hw_test|unity|template)'
        runs-on: ubuntu-latest
        needs: [build_unit_tets,build_STM32G071RB_nucleo_ll_1_key_ui, build_STM32G071RB_nucleo_ll_2state_switch]
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Run clang-format style check for C/C++/Protobuf programs.
              uses: jidicula/clang-format-action@v4.13.0
              with:
                clang-format-version: '18'
                check-path: ${{matrix.path['check']}}
                exclude-regex: ${{matrix.path['exclude']}}
    
    run_unit_tests:
        name: Run Unit Tests
        runs-on: ubuntu-latest
        needs: [build_unit_tets,build_STM32G071RB_nucleo_ll_1_key_ui, build_STM32G071RB_nucleo_ll_2state_switch]
        strategy:
          matrix:
            module:
              - pushbutton
              - switch
        steps:
          - name: Download Unit Tests Build Artifacts
            uses: actions/download-artifact@v4
            with:
              name: ${{matrix.module}}_unit_tests_app

          - name: Run Unit Tests
            run: |
              chmod +x ${{matrix.module}}_test
              ./${{matrix.module}}_test -v
    
    run_code_coverage_check:
        name: Run Code Coverage Check
        runs-on: ubuntu-latest
        needs: [build_unit_tets,build_STM32G071RB_nucleo_ll_1_key_ui, build_STM32G071RB_nucleo_ll_2state_switch]
        strategy:
          matrix:
            module:
              - pushbutton
              - switch
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Download Unit Tests Build Artifacts
              uses: actions/download-artifact@v4
              with:
                name: ${{matrix.module}}_unit_tests_app
                path: test/${{matrix.module}}/out

            - name: Run Unit Tests
              continue-on-error: true
              working-directory: test/${{matrix.module}}/out
              run: |
                chmod +x ${{matrix.module}}_test
                ./${{matrix.module}}_test -v

            - name: Check Test Coverage
              uses: threeal/gcovr-action@v1.1.0
              with:
                excludes: test
                fail-under-line: 90
    
    run_cppcheck:
        name: Run CppCheck
        runs-on: ubuntu-latest
        needs: [build_unit_tets,build_STM32G071RB_nucleo_ll_1_key_ui, build_STM32G071RB_nucleo_ll_2state_switch]
        strategy:
          matrix:
            module:
              - pushbutton
              - switch
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Run cppcheck-annotation-action
              uses: niwciu/cppcheck-annotation-action@develop
              with:
                sources: ./src/${{matrix.module}} ./test/${{matrix.module}}
                additional-args: --force -UUNITY_FIXTURE_FREE -UUNITY_FIXTURE_MALLOC -UUNITY_OUTPUT_CHAR
                log-level: verbose
                std: c99
                suppress: missingIncludeSystem,missingInclude,unusedFunction:./test/${{matrix.module}}/${{matrix.module}}_test_runner.c:3
                action-fail-level: 'failure,warning'
                # annotation-notices:
                # annotation-failures: 
                # annotation-warnings: 
                # annotation-level-default: 

            - name: Annotate lines with errors
              if: always()
              uses: yuzutech/annotations-action@v0.5.0
              with:
                repo-token: "${{ secrets.GITHUB_TOKEN }}"
                title: 'Results of CppCheck'
                input: 'annotations.json'
            

    run_code_complexity_check:
        name: Run Code Complexity Check
        runs-on: ubuntu-latest
        needs: [build_unit_tets,build_STM32G071RB_nucleo_ll_1_key_ui, build_STM32G071RB_nucleo_ll_2state_switch]
        strategy:
          matrix:
            module:
              - pushbutton
              - switch
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Lizard Runner
              uses: niwciu/Lizard-Runner@develop
              with: 
                path: ./src/${{matrix.module}}
                CCN: 12
                Threshold: nloc=30
                arguments: 4
                language: cpp
                verbose: true

    generate_ccm_ccr_reports:
        name: Generate Code Coverage Report
        runs-on: ubuntu-latest
        container: 
          image: niwciu/stm32_dev_container:1.0.3
          options: --user root
        needs: 
            - run_clang-format_check
            - run_unit_tests
            - run_code_coverage_check
            - run_cppcheck
            - run_code_complexity_check
        steps:
            - name: checkout
              uses: actions/checkout@v4
              
            - name: Create PyScript Venv
              working-directory: test/_config_scripts
              shell: bash
              run: |
                python3 -m venv venv
                source venv/bin/activate
                pip install -r requirements.txt
                deactivate

            - name: Run All Targets
              working-directory: test/_config_scripts/run_targets
              shell: bash
              run: |
                source ../venv/bin/activate
                python3 run_targets.py -rp
                deactivate

            - name: Save Generated Reports
              uses: actions/upload-artifact@v4
              with:
                  name: CCM_CCR_Reports
                  path: ./reports # need to save all files in folder
                  if-no-files-found: warn
                  retention-days: 5
                  overwrite: true