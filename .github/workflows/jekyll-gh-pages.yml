# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Project page and reports deploy

on:
  # Runs on pushes targeting the default branch
  # push:
  #   branches: ["feature/github_CI_CD_Workflow"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Reports Folder
        run: mkdir reports
      
      - name: Get workflow_id for "test" workflow
        id: get_workflow_id
        run: |
          WORKFLOW_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/workflows" \
              | jq -r '.workflows[] | select(.name=="test") | .id')
          
          if [ -z "$WORKFLOW_ID" ]; then
            echo "Nie znaleziono workflow o nazwie 'test'"
            exit 1
          fi

          echo "WORKFLOW_ID=$WORKFLOW_ID" >> $GITHUB_ENV

      - name: Get run-id from last "test" workflow run
        id: get_run_id
        run: |
          RUN_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ env.WORKFLOW_ID }}/runs?status=completed" \
              | jq -r '.workflow_runs[0].id')

          if [ -z "$RUN_ID" ]; then
            echo "Nie znaleziono zakoÅ„czonych uruchomieÅ„ dla workflow ID ${{ env.WORKFLOW_ID }}"
            exit 1
          fi

          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Pobierz artefakty z workflow "generate-reports"
        uses: actions/download-artifact@v4
        with:
          name: CCM_CCR_Reports  # Nazwa artefaktu
          github-token: ${{ secrets.GH_PAT }}
          repository: ${{ github.repository }}
          run-id: ${{ env.RUN_ID }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
  cleanup:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: ðŸ—‘ Delete deployment
        uses: strumwolf/delete-deployment-environment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: github-pages
          onlyRemoveDeployments: true

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, cleanup]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
